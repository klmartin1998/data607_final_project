word_vec <- distinct_words$word
english_stopwords <- stopwords("en")
distinct_words
set_diff(word_vec, english_stopwords)
setdiff(word_vec, english_stopwords)
word_vec <- setdiff(word_vec, english_stopwords)
job_skills_df
length(job_skills_df)
nrow(job_skills_df)
word_freq <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
included_posts = n_distinct(job_post)) %>%
mutate(total_words = sum(word_count),
total_posts = nrow(job_skills_df))
tf_df <- combined_df %>%
group_by(job_post, word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count)) %>%
ungroup()
tf_df <- tf_df %>%
mutate(tf = word_count/total_words)
idf_df <- tf_df %>%
group_by(word) %>%
summarize(num_posts = n_distinct(job_post))
idf_df <- idf_df %>%
mutate(idf = log(nrow(job_skills_df)/num_posts))
tf_idf_df <- left_join(tf_df, idf_df)
tf_idf_df <-
tf_idf_df %>% mutate(tf_idf = (tf)*(idf))
tf_idf_spread <-
tf_idf_df %>% spread(key=word, value=tf_idf, fill=0  )
features_df <-
tf_idf_df %>%
select(-c(job_post, word_count, total_words, tf, num_posts, idf))
word_freq
combined_df
combined_df %>% filter(str_detect(word, regex("//d")))
combined_df %>% filter(word == "0")
combined_df %>% filter(word == "1")
job_skills_df
job_skills_df %>% filter(str_detect(skill, "\\d"))
job_skills_df %>% filter(str_detect(skill, "\\d")) %>% print(n=34)
job_skills_df<- tibble(job_skills_df) %>%
filter(skill != "") %>%
filter(nchar(skill) > 1) %>%
mutate(skill = str_remove_all(skill, regex("\\d")))
text_df <- tibble(job_post = 1:nrow(job_skills_df), text=job_skills_df$skill)
one_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=1)
two_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=2)
three_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=3)
four_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=4)
combined_df <- rbind(one_word_df, two_word_df)
combined_df <- rbind(combined_df, three_word_df)
combined_df <- rbind(combined_df, four_word_df)
combined_df <- combined_df %>% filter(!is.na(word))
distinct_words <- combined_df %>%
distinct(word) %>%
filter(!(is.na(word)))
word_vec <- distinct_words$word
english_stopwords <- stopwords("en")
word_vec <- setdiff(word_vec, english_stopwords)
word_freq <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
included_posts = n_distinct(job_post)) %>%
mutate(total_words = sum(word_count),
total_posts = nrow(job_skills_df))
word_freq
tf_df <- combined_df %>%
group_by(job_post, word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count)) %>%
ungroup()
tf_df
distinct_words
distinct_words <- combined_df %>%
distinct(word) %>%
filter(!(is.na(word))) %>%
filter(!(word %in% english_stopwords))
distinct_words
word_vec <- distinct_words$word
word_freq <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
included_posts = n_distinct(job_post)) %>%
mutate(total_words = sum(word_count),
total_posts = nrow(job_skills_df))
word_freq
tf_df <- combined_df %>%
group_by(job_post, word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count)) %>%
ungroup()
tf_df
text_df <- tibble(job_post = 1:nrow(job_skills_df), text=job_skills_df$skill)
one_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=1)
two_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=2)
three_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=3)
four_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=4)
combined_df <- rbind(one_word_df, two_word_df)
combined_df <- rbind(combined_df, three_word_df)
combined_df <- rbind(combined_df, four_word_df)
combined_df <- combined_df %>%
filter(!is.na(word)) %>%
filter(!(word %in% english_stopwords))
english_stopwords <- stopwords("en")
distinct_words <- combined_df %>%
distinct(word)
word_vec <- distinct_words$word
word_freq <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
included_posts = n_distinct(job_post)) %>%
mutate(total_words = sum(word_count),
total_posts = nrow(job_skills_df))
word_freq
tf_df <- combined_df %>%
group_by(job_post, word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count)) %>%
ungroup()
tf_df
word_freq <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
included_posts = n_distinct(job_post)) %>%
mutate(total_words = sum(word_count),
total_posts = nrow(job_skills_df))
tf_df <- combined_df %>%
group_by(job_post, word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count)) %>%
ungroup()
tf_df <- tf_df %>%
mutate(tf = word_count/total_words)
idf_df <- tf_df %>%
group_by(word) %>%
summarize(num_posts = n_distinct(job_post))
idf_df <- idf_df %>%
mutate(idf = log(nrow(job_skills_df)/num_posts))
tf_idf_df <- left_join(tf_df, idf_df)
tf_idf_df <-
tf_idf_df %>% mutate(tf_idf = (tf)*(idf))
tf_idf_spread <-
tf_idf_df %>% spread(key=word, value=tf_idf, fill=0  )
features_df <-
tf_idf_df %>%
select(-c(job_post, word_count, total_words, tf, num_posts, idf))
tf_idf_df
features_df %>% head()
tf_idf_spread
features_df <-
tf_idf_df %>%
select(-c(word_count, total_words, tf, num_posts, idf))
features_df <-
tf_idf_df_spread %>%
select(-c(word_count, total_words, tf, num_posts, idf))
features_df <-
tf_idf_spread %>%
select(-c(word_count, total_words, tf, num_posts, idf))
features_df %>% head()
features_df %>% filter(`a b testing` > 0)
word_freq <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
included_posts = n_distinct(job_post)) %>%
mutate(total_words = sum(word_count),
total_posts = nrow(job_skills_df))
tf_df <- combined_df %>%
group_by(job_post, word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count)) %>%
ungroup()
tf_df <- tf_df %>%
mutate(tf = word_count/total_words)
idf_df <- tf_df %>%
group_by(word) %>%
summarize(num_posts = n_distinct(job_post))
idf_df <- idf_df %>%
mutate(idf = log(nrow(job_skills_df)/num_posts))
tf_idf_df <- left_join(tf_df, idf_df)
tf_idf_df <-
tf_idf_df %>% mutate(tf_idf = (tf)*(idf))
tf_idf_spread <-
tf_idf_df %>% spread(key=word, value=tf_idf, fill=0  )
features_df <-
tf_idf_spread %>%
select(-c(job_post, word_count, total_words, tf, num_posts, idf))
kmeans_info <- kmeans(features_df,50)
x
kmeans_info
job_skills_df_updated <- tibble(cbind(job_skills_df, kmeans_info$cluster))
job_skills_df
kmeans_info$cluster
features_df
word_freq
tf_df
idf_df
tf_idf_df
tf_idf_spread
tf_idf_spread %>% filter(job_post == 1)
tf_idf_spread %>% distinct(job_post)
features_df <-
tf_idf_spread %>%
select(-c(word_count, total_words, tf, num_posts, idf))
features_df
features_df %>% distinct()
features_df %>% distinct(job_post, .keep_all = TRUE)
features_df <-
tf_idf_spread %>%
select(-c(word_count, total_words, tf, num_posts, idf)) %>%
distinct(job_post, .keep_all = TRUE)
kmeans_info <- kmeans(features_df,20)
job_skills_df_updated <- tibble(cbind(job_skills_df, kmeans_info$cluster))
kmeans_info$cluster
job_skills_df
features_df %>% select(-job_post)
features_array = features_df %>% select(-job_post)
as.matrix(features_array)
kmeans_info <- kmeans(features_array,20)
length(kmeans_info$cluster)
job_skills_df_updated <- tibble(cbind(job_skills_df, kmeans_info$cluster))
job_skills_df
View(job_skills_array)
features_array
View(job_skills_df)
features_df
cbind(features_df, kmeans_info$cluster)
job_skills_df_updated <- tibble(cbind(features_df, kmeans_info$cluster))
job_skills_df_updated <- job_skills_df_updated %>% rename(cluster=`kmeans_info$cluster`)
job_skills_df_updated
job_skills_df_updated <- job_skills_df_updated %>% rename(cluster_group=`kmeans_info$cluster`)
job_skills_df_updated <- job_skills_df_updated %>% select(c("job_post","cluster_group"))
job_skills_df_updated
job_skills_df
job_skills_df %>% mutate(job_post = row_number())
job_skills_df <- job_skills_df %>%
mutate(job_post = row_number()) %>%
relocate(job_post, before=job_board)
job_skills_df
features_df
combined_df
job_skills_df
#text_df <- tibble(job_post = 1:nrow(job_skills_df), text=job_skills_df$skill)
one_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=1)
two_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=2)
three_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=3)
four_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=4)
combined_df <- rbind(one_word_df, two_word_df)
combined_df <- rbind(combined_df, three_word_df)
combined_df <- rbind(combined_df, four_word_df)
combined_df <- combined_df %>%
filter(!is.na(word)) %>%
filter(!(word %in% english_stopwords))
english_stopwords <- stopwords("en")
distinct_words <- combined_df %>%
distinct(word)
word_vec <- distinct_words$word
combined_df
word_freq <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
included_posts = n_distinct(job_post)) %>%
mutate(total_words = sum(word_count),
total_posts = nrow(job_skills_df))
word_req
word_freq
tf_df
tf_df <- tf_df %>%
mutate(tf = word_count/total_words)
idf_df <- tf_df %>%
group_by(word) %>%
summarize(num_posts = n_distinct(job_post))
idf_df <- idf_df %>%
mutate(idf = log(nrow(job_skills_df)/num_posts))
tf_idf_df <- left_join(tf_df, idf_df)
tf_idf_df <-
tf_idf_df %>% mutate(tf_idf = (tf)*(idf))
tf_idf_df
tf_idf_spread <-
tf_idf_df %>% spread(key=word, value=tf_idf, fill=0  )
features_df <-
tf_idf_spread %>%
select(-c(word_count, total_words, tf, num_posts, idf)) %>%
distinct(job_post, .keep_all = TRUE)
features_df
tf_idf_spread
job_skills_df
features_array
features_df
tf_idf_df
distinct(tf_idf_df$job_post)
distinct(tf_idf_df$job_post)
tf_idf_df
tf_idf_df$job_post
tf_idf_df %>% select(job_post)
tf_idf_df %>% select(job_post) %>% n_distinct()
tf_idf_df %>% select(job_post) %>% max()
tf_idf_df %>% select(job_post) %>% mutate(rank = row_number())
tf_idf_df %>% select(job_post) %>% distinct()
View(tf_idf_df %>% select(job_post) %>% distinct())
features_df
job_skills_df
job_skills_df %>% slice(688)
combined_df
combined_df %>% filter(job_post == 688)
job_skills_df
job_skills_df %>% drop(688)
job_skills_df %>% filter(job_post == 688)
one_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=1)
two_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=2)
three_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=3)
four_word_df <- text_df %>% unnest_tokens(word, text, token = 'ngrams', n=4)
combined_df <- rbind(one_word_df, two_word_df)
combined_df <- rbind(combined_df, three_word_df)
combined_df <- rbind(combined_df, four_word_df)
combined_df %>% filter(job_post == 688)
job_skills_df
job_skills_df %>% filter(job_post != 688)
word_freq %>% filter(job_post==688)
word_freq
idf_Df
idf_df
tf_idf_df
tf_idf_df %>% filter(job_post == 688)
job_skills_df_updated
job_skills_df_updated %>% filter(job_post == 688)
left_join(job_skills_df)
job_skills_df
left_join(job_skills_df_updated,job_skills_df)
left_join(job_skills_df_updated,job_skills_df) %>% count(cluster_group)
left_join(job_skills_df_updated,job_skills_df) %>% filter(cluster_group==2)
tf_df
tf_idf_df
tf_idf_df %>% count(tf_idf)
tf_idf_df %>% count(tf_idf) %>% arrange(desc(n))
tf_idf_df %>% filter(tf_idf == 0.194)
kmeans_info$cluster
features_array
features_array %>% select(advanced)
features_array %>% select(advanced) %>% print(n=900)
features_array %>% select(advanced) %>% filter(advanced != 0)
features_array %>% filter(advanced != 0)
features_array = features_df %>% select(-job_post)
kmeans_info <- kmeans(features_array,20)
kmeans_info
job_skills_df_updated <- tibble(cbind(features_df, kmeans_info$cluster))
job_skills_df_updated <- job_skills_df_updated %>% rename(cluster_group=`kmeans_info$cluster`)
job_skills_df_updated %>% filter(cluster_group == 5)
View(job_skills_df_updated %>% filter(cluster_group == 5))
x_gamma <- rgamma(n=n,shape=shape, rate=lambda)
set.seed(51023)
n = 10000
shape = 5
lambda = 3
x_gamma <- rgamma(n=n,shape=shape, rate=lambda)
word_freq
tf_idf_df
tf_idf_df %>% bind_tf(word, job_post, word_count)
tf_idf_df %>% bind_tf_idf(word, job_post, word_count)
tf_idf_df
kmeans_info <- kmeans(features_array,20, nstart=25)
combined_df
combined_df %>% group_by(word) %>% summarize(word_count = n())
combined_df %>% group_by(word) %>% summarize(word_count = n()) %>% mutate(total_words = sum(word_count))
word_freq
word_count <- combined_df %>%
group_by(word) %>%
summarize(word_count = n(),
total_words = sum(word_count))
word_count
word_count <- combined_df %>%
group_by(word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count))
word_count
word_count <- combined_df %>%
group_by(word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count),
tf = word_count/total_words)
word_count
combined_df
left_join(word_count, combined_df)
word_count
left_join(combined_df, word_count)
left_join(combined_df, word_count) %>% bind_tf_idf(word, job_post, word_count)
left_join(combined_df, word_count) %>% bind_tf_idf(word, job_post, word_count) %>% arange(desc(tf_idf))
left_join(combined_df, word_count) %>% bind_tf_idf(word, job_post, word_count) %>% arrange(desc(tf_idf))
english_stopwords
tibble(english_stopwords)
tibble(english_stopwords) %>% filter(english_stopwords == 'and')
tibble(english_stopwords) %>% filter(english_stopwords == 'use')
tibble(english_stopwords) %>% filter(english_stopwords == 'be')
combined_df <- combined_df %>%
filter(!is.na(word)) %>%
filter(!(word %in% english_stopwords))
combined_df
word_count <- combined_df %>%
group_by(word) %>%
summarize(word_count = n()) %>%
mutate(total_words = sum(word_count),
tf = word_count/total_words)
word_count
word_count %>% filter(word == 'be')
left_join(combined_df, word_count)
left_join(combined_df, word_count) %>% bind_tf_idf(word, job_post, word_count)
left_join(combined_df, word_count) %>% bind_tf_idf(word, job_post, word_count) %>% arrange(tf_idf)
tf_idf_df <- left_join(combined_df, word_count) %>%
bind_tf_idf(word, job_post, word_count)
tf_idf_df %>% filter(job_post == 688)
tf_idf_spread <-
tf_idf_df %>% spread(key=word, value=tf_idf, fill=0  )
tf_idf_df %>% select(c(35668,35678))
tf_idf_df %>% slice(c(35668,35678))
tf_idf_df %>% distinct()
tf_idf_df <- left_join(combined_df, word_count) %>%
bind_tf_idf(word, job_post, word_count) %>%
distinct()
tf_idf_spread <-
tf_idf_df %>% spread(key=word, value=tf_idf, fill=0  )
tf_idf_spread
view(tf_idf_spread %>% filter(job_post == 1))
combined_df %>% filter(job_post == 1)
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)
)
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`) %>% fill(., direction="downup")
)
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`) %>% fill(., .direction="downup")
)
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="downup")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="up")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="down")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(advanced, .direction="down")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(advanced, .direction="downup")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(`advanced`)
tf_idf_spread <-
tf_idf_df %>% spread(key=word, value=tf_idf, fill=NA  )
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`))
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="updown")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="down")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(advanced, .direction="down")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="down")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(name(.), .direction="down")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="down")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(., .direction="downup")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(statistics, .direction="downup")
tf_idf_spread %>% filter(job_post == 1) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(.)
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(.)
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(advanced, .direction='downup')
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(c(.), .direction='downup')
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(all_of(.), .direction='downup')
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`))
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(names(td_idf_spread),)
col_names(td_idf_spread)
colnames(td_idf_spread)
td_idf_spread
colnames(tf_idf_spread)
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(names(tf_idf_spread),)
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(tf_idf_spread),)
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(.),)
tf_idf_spread %>% group_by(job_post) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(.),.direction="updown")
combined_df %>% filter(word == 'advanced')
tf_idf_spread %>% group_by(job_post) filter(job_post %in% c(1,17,20)) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(.),.direction="updown")
tf_idf_spread %>% group_by(job_post) %>% filter(job_post %in% c(1,17,20)) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(.),.direction="updown")
tf_idf_spread %>% group_by(job_post) %>% filter(job_post %in% c(1,17,20)) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(.),.direction="updown") %>% print(n-44)
tf_idf_spread %>% group_by(job_post) filter(job_post %in% c(1,17,20)) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(.),.direction="updown") %>% print(n=44)
tf_idf_spread %>% group_by(job_post) %>% filter(job_post %in% c(1,17,20)) %>% select(c(`advanced`,`statistics`,`modeling`, `knowledge`)) %>% fill(colnames(.),.direction="updown") %>% print(n=44)
tf_idf_spread %>% group_by(job_post) %>% fill(colnames(.),.direction="updown")
tf_idf_spread
tf_idf_mod <- tf_idf_spread %>%
group_by(job_post) %>%
select(-c(word_count, total_words, tf, idf)) %>%
fill(colnames(.),.direction="updown") %>%
distinct(job_post, .keep_all = TRUE)
tf_idf_mod
combined_df %>% filter(job_post == 1)
tf_idf_mod %>% filter(job_post == 1) %>% select(c(`advanced`, `statistics`,`modeling`,`knowledge`))
features_array = tf_idf_mod %>% select(-job_post)
features_array
tf_idf_mod <- tf_idf_spread %>%
group_by(job_post) %>%
select(-c(word_count, total_words, tf, idf)) %>%
fill(colnames(.),.direction="updown") %>%
distinct(job_post, .keep_all = TRUE) %>%
ungroup()
tf_idf_mod
tf_idf_mod %>% ungroup()
features_array <- tf_idf_mod %>%
ungroup() %>%
select(-job_post)
features_array
kmeans_info <- kmeans(features_array,20, nstart=25)
feature_array %>% fill_na(0)
feature_array %>% fillna(0)
features_array %>% fillna(0)
features_array %>% replace_na(0)
?coalesce
features_array %>% mutate_at(., replace_na(., 0))
features_array %>% mutate_at(colnames(features_array), replace_na(., 0))
featres_array %>% head()
features_array %>% head()
features_array %>% head() %>% filter(is.na(.))
replace(features_array %>% head(),0)
replace(features_array %>% head(),is.na(features_array %>% head()),0)
features_array_mod <- replace(features_array, is.na(features_array),0)
features_array_mod %>% head()
features_array_mod %>% filter(`analytics` > 0)
features_array_mod %>% filter(`analytics` > 0) %>% select(`analytics`)
## Run KMean algorithm on the features array
kmeans_info <- kmeans(features_array_mod,20, nstart=25)
